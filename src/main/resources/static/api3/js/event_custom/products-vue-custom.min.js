+function ($) {
    var sectionNavTemplate = `
        <div v-if="isNav" class="vp-section-nav" :class="isScroll ? 'vp-section-nav-scroll' : ''">
            <ul>
                <li v-for="(section, secIdx) in sections" :style="sectionStyle">
                    <a :class="activeIdx === secIdx ? 'active' : ''" @click.prevent="onClickNavBtn(secIdx)" v-html="section.title"></a>
                </li>
            </ul>
        </div>
    `;
    var productCardTemplate = `
        <div class="event-vue-custom-container">
            <div v-for="(group, groupIdx) in productData" class="vp-group" :class="['vp-group-'+groupIdx, moveScroll ? 'vp-group-scroll-vertical' : 'vp-group-scroll-horizontal']">
                <slot :name="'group-'+groupIdx+'-header'"></slot>
                <event-vue-custom-section-nav :group="group" :groupIdx="groupIdx"></event-vue-custom-section-nav>
                <div v-for="(section, secIdx) in group.section" class="vp-section" :class="['vp-section-'+secIdx, secIdx === group.activeSecIdx ? 'vp-section-active' : '']">
                    <slot :name="'group-'+groupIdx+'-section-'+secIdx+'-header'"></slot>
                    <div v-if="visibleProduct(item)" v-for="(item, itemIdx) in section.affiliates" class="vp-affiliates" :class="['vp-affiliates-'+itemIdx]">
                        <div v-if="item.templateType !== 'SUB_A'" class="vp-item" @click.prevent="onClickItem(item)" :class="vpItemClass(item)" data-deepLink data-braze="productClick">
                            <div class="vp-item-wrap">
                                <div class="item-head">
                                    <span v-if="item.label">{{ item.label }}</span>
                                    <strong v-html="item.title"></strong>
                                    <div v-if="item.badge" class="item-badges">
                                        <span v-for="badge in splitBadgesByShop(item.badge)" class="badge">{{ badge }}</span>
                                    </div>
                                </div>
                                <div class="item-img">
                                    <div v-if="item.sale" class="item-sale-flag">
                                        <span>{{item.sale}}<em>%</em></span>
                                    </div>
                                    <div v-if="item.black" class="item-mark-black"></div>
                                    <div class="item-image-box">
                                        <img class="lazy" :src="'https://static.goodchoice.kr/event/common/images/thumb-main.jpg'" :data-original="vpItemImgSrc(item)" :alt="[item.title]">
                                    </div>
                                </div>
                                <div class="item-price">
                                    <div class="item-price-wrap">
                                        <dl v-if="item.priceDefault" class="price-default">
                                            <dt></dt>
                                            <dd>{{ item.priceDefault }}</dd>
                                        </dl>
                                        <dl v-if="item.priceSpecialLabel && item.priceSpecial" class="price-special">
                                            <dt>{{ item.priceSpecialLabel }}</dt>
                                            <dd>{{ item.priceSpecial }}</dd>
                                        </dl>
                                        <dl v-if="item.priceCouponLabel && item.priceCoupon" class="price-coupon">
                                            <dt>{{ item.priceCouponLabel }}</dt>
                                            <dd>{{ item.priceCoupon }}</dd>
                                        </dl>
                                        <dl v-if="item.priceCardLabel && item.priceCard" class="price-card">
                                            <dt>{{ item.priceCardLabel }}</dt>
                                            <dd>{{ item.priceCard }}</dd>
                                        </dl>
                                        <dl v-if="item.totalPriceLabel && item.totalPrice" class="price-total">
                                            <dt>{{ item.totalPriceLabel }}</dt>
                                            <dd>{{ item.totalPrice }}</dd>
                                        </dl>
                                    </div>
                                    <div v-if="item.notice" class="item-notice">
                                        <p v-html="noticeConvert(item.notice)"></p>
                                    </div>
                                </div>
                                <div class="item-footer">
                                    <span v-if="item.buttonText" class="item-footer-button">
                                        {{ item.buttonText }}
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div v-if="item.templateType === 'SUB_A'" class="vp-item" @click.prevent="onClickItem(item)" :class="vpItemClass(item)" data-deepLink data-braze="productClick">
                            <div class="vp-item-wrap">
                                <div class="item-img">
                                    <div v-if="item.sale" class="item-sale-flag">
                                        <span>{{item.sale}}<em>%</em></span>
                                    </div>
                                    <div v-if="item.black" class="item-mark-black"></div>
                                    <div class="item-image-box">
                                        <img class="lazy" :src="'https://static.goodchoice.kr/event/common/images/thumb-main.jpg'" :data-original="vpItemImgSrc(item)" :alt="[item.title]">
                                    </div>
                                </div>
                                <div class="item-info">
                                    <div class="item-head">
                                        <span v-if="item.label">{{ item.label }}</span>
                                        <strong v-html="item.title"></strong>
                                        <div v-if="item.badge" class="item-badges">
                                            <span v-for="badge in splitBadgesByShop(item.badge)" class="badge">{{ badge }}</span>
                                        </div>
                                    </div>
                                    <div class="item-price">
                                        <div class="item-price-wrap">
                                            <dl v-if="item.priceDefault" class="price-default">
                                                <dt></dt>
                                                <dd>{{ item.priceDefault }}</dd>
                                            </dl>
                                            <dl v-if="item.priceSpecialLabel && item.priceSpecial" class="price-special">
                                                <dt>{{ item.priceSpecialLabel }}</dt>
                                                <dd>{{ item.priceSpecial }}</dd>
                                            </dl>
                                            <dl v-if="item.priceCouponLabel && item.priceCoupon" class="price-coupon">
                                                <dt>{{ item.priceCouponLabel }}</dt>
                                                <dd>{{ item.priceCoupon }}</dd>
                                            </dl>
                                            <dl v-if="item.priceCardLabel && item.priceCard" class="price-card">
                                                <dt>{{ item.priceCardLabel }}</dt>
                                                <dd>{{ item.priceCard }}</dd>
                                            </dl>
                                            <dl v-if="item.totalPriceLabel && item.totalPrice" class="price-total">
                                                <dt>{{ item.totalPriceLabel }}</dt>
                                                <dd>{{ item.totalPrice }}</dd>
                                            </dl>
                                        </div>
                                        <div v-if="item.notice" class="item-notice">
                                            <p v-html="noticeConvert(item.notice)"></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div v-if="section.button" @click.prevent="onClickSectionButton(section.button)" class="vp-section-button" data-braze="productRecommend">
                        <a>{{ section.button.buttonText }}</a>
                    </div>
                    <slot :name="'group-'+groupIdx+'-section-'+secIdx+'-footer'"></slot>
                </div>
                <slot :name="'group-'+groupIdx+'-footer'"></slot>
            </div>
        </div>
    `;
    Vue.component("event-vue-custom-section-nav", {
        template: sectionNavTemplate,
        props: ["groupIdx", "group"],
        data() {
            return {
                activeIdx: 0,
                groupSelector: ".vp-group-" + this.groupIdx,
                $groupSections: undefined,
                sections: this.group.section,
                defaultNavLength: 5,
                maxNavLength: PVC.data.maxNavLength,
                isNavScroll: PVC.data.isNavScroll,
                moveScroll: PVC.data.moveScroll
            }
        },
        computed: {
            isNav() {
                return this.group.useNavigator === "Y" && this.group.section.length > 0
            },
            isScroll() {
                return this.isNavScroll && this.sections.length > this.maxNavLength
            },
            sectionStyle() {
                var ret = [];
                if (this.maxNavLength !== this.defaultNavLength) {
                    ret.push("min-width:" + 100 / this.maxNavLength + "%;")
                }
                return ret.join(" ")
            }
        },
        created() {
            this.sections.forEach(function (o, i) {
                o.isActive = false
            })
        },
        mounted() {
            if (this.isNav) {
                var liCnt = this.$el.querySelectorAll("ul li").length || 0;
                if (liCnt < this.maxNavLength) {
                    this.isNavScroll = false
                }
            }
            this.$nextTick(function () {
                if (this.isNav && this.moveScroll) {
                    this.$groupSections = $(this.groupSelector + " .vp-section");
                    if (this.$groupSections && this.$groupSections.length > 1) {
                        window.addEventListener("scroll", this.onScrollActive)
                    }
                }
            })
        },
        beforeDestroy() {
            window.removeEventListener("scroll", this.onScrollActive)
        },
        methods: {
            onClickNavBtn(secIdx) {
                if (this.moveScroll) {
                    var $selector = this.groupSelector + " .vp-section-" + secIdx;
                    var $el = $($selector);
                    var _navH = this.$el.offsetHeight + 1 || 0;
                    PVC.animationMoveTo($el.offset().top - _navH + 4);
                    this.onNavMoveX(secIdx)
                } else {
                    var $selector = this.groupSelector;
                    var $el = $($selector);
                    PVC.animationMoveTo($el.offset().top + 4);
                    this.group.activeSecIdx = secIdx;
                    this.activeIdx = secIdx
                }
            },
            onNavMoveX(secIdx) {
                if (!this.isNavScroll)
                    return false;
                var $ul = $(this.$el.querySelector("ul"));
                var $li = $ul.find("li");
                var pos = 0;
                $li.each(function (i, o) {
                    if (i < secIdx) {
                        pos += $(o).width()
                    } else {
                        return false
                    }
                });
                PVC.animationMoveX($ul, pos)
            },
            onScrollActive() {
                var _t = this;
                var _y = window.scrollY;
                var $group = $(this.groupSelector);
                var _gTopPos = $group.offset().top || 0;
                var _gBottomPos = $group.height() + _gTopPos || 0;
                var _navH = this.$el.offsetHeight + 1 || 0;
                var isActiveGroupScroll = _gTopPos < _y && _y < _gBottomPos;
                if (!isActiveGroupScroll) {
                    return false
                }
                this.$groupSections.each(function (i, o) {
                    var $o = $(o);
                    var tP = $o.offset().top - _navH;
                    var bP = $o.height() + tP;
                    var isActiveNav = tP < _y && _y < bP;
                    if (isActiveNav) {
                        if (_t.activeIdx === i) {
                            return false
                        }
                        _t.activeIdx = i;
                        _t.onNavMoveX(i)
                    }
                })
            }
        }
    });
    Vue.component("event-vue-custom-container", {
        template: productCardTemplate,
        data() {
            return Object.assign(PVC.data, {})
        },
        mounted() {
            $("img.lazy").lazyload({
                threshold: 800,
                effect: "fadeIn"
            })
        },
        methods: {
            onClickItem(item) {
                if (PVC.data.service === "hotel") {
                    var scheme = PVC.replaceSchema(PVC.data.scheme.hotel, {
                        ano: item.ht_index,
                        checkIn: PVC.data.checkIn,
                        checkOut: PVC.data.checkOut
                    });
                    location.href = scheme
                } else {
                    var scheme = item.productType === "accommodation" ? PVC.data.scheme.yeogi : PVC.data.scheme.activity;
                    scheme = PVC.replaceSchema(scheme, {
                        ano: item.yg_index
                    });
                    location.href = scheme
                }
            },
            onClickSectionButton(button) {
                location.href = PVC.data.service === "yeogi" ? button.yg_linkUri : button.ht_linkUri
            },
            splitBadgesByShop(str) {
                return str.split("#").filter(function (v) {
                    return v !== ""
                })
            },
            noticeConvert(str) {
                var re = /\n/g;
                return str.replace(re, "<br />")
            },
            vpItemClass(item) {
                var returnClass = [];
                returnClass.push("vp-item-" + item.templateType);
                if (item.yg_index) {
                    returnClass.push("vp-item-yg-" + item.yg_index)
                }
                if (item.ht_index) {
                    returnClass.push("vp-item-ht-" + item.ht_index)
                }
                return returnClass
            },
            vpItemImgSrc(item) {
                return `${this.imagePath[this.env]}/${item.yg_index}.jpg`
            },
            visibleProduct(item) {
                var currentDate = PVC.data.currentDate;
                var isDateDiff = moment.duration(moment(item.startedAt, "YYYY-MM-DD HH:mm").diff(currentDate)).asMinutes() < 0 && moment.duration(moment(item.endedAt, "YYYY-MM-DD HH:mm").diff(currentDate)).asMinutes() > 0;
                var isAlways = item.startedAt === "" && item.endedAt === "";
                return isDateDiff || isAlways
            }
        }
    });
    var _c = {
        log: console.info.bind(console, "%c PVC(Product Vue Custom) INFO ", "background-color:#0766a0; font-weight:bold; font-style:italic;"),
        warn: console.warn.bind(console, "%c PVC(Product Vue Custom) WARN ", "background-color:#b16100; font-weight:bold; font-style:italic;"),
        error: console.error.bind(console, "%c PVC(Product Vue Custom) ERROR ", "background-color:#b50009; font-weight:bold; font-style:italic;")
    };
    var PVC = {
        default: {
            isInit: false,
            eventNo: undefined,
            currentDate: undefined,
            checkIn: undefined,
            checkOut: undefined,
            maxNavLength: 5,
            isNavScroll: false,
            moveScroll: true
        },
        data: {
            env: "release",
            el: ".event-vue-custom",
            $el: "",
            serverURL: {
                local: "https://dev-cdn-contents.withstatic.com",
                dev: "https://dev-cdn-contents.withstatic.com",
                stage: "https://stage-cdn-contents.withstatic.com",
                release: "https://static.goodchoice.kr"
            },
            service: "yeogi",
            productData: [],
            scheme: {
                yeogi: "yeogi://details?schemetype=detail&anim=2&ano=#{ano}&adcno=2",
                hotel: "hoteltime://info?a_id=#{ano}&checkin=#{checkIn}&checkout=#{checkOut}",
                activity: "yeogi://details?schemetype=act_product&anim=2&productUid=#{ano}"
            },
            imagePath: {
                local: "https://dev-cdn-contents.withstatic.com/event/#{eno}/images/product",
                dev: "https://dev-cdn-contents.withstatic.com/event/#{eno}/images/product",
                stage: "https://static.goodchoice.kr/event/#{eno}/images/product",
                release: "https://static.goodchoice.kr/event/#{eno}/images/product"
            }
        },
        init() {
            var _d = this.data;
            if (_d.isInit) {
                return false
            }
            _d.isInit = true;
            _d.$el = $(_d.el);
            if (!_d.$el || !_d.$el.length > 0) {
                _c.warn("doesn't have a .event-vue-custom Element");
                return false
            }
            if (!_d.eventNo) {
                _c.error("eventNo is undefined");
                return false
            }
            _c.log("PVC installed :)");
            Object.keys(_d.imagePath).forEach(function (key) {
                _d.imagePath[key] = _d.imagePath[key].replace("#{eno}", _d.eventNo)
            });
            $.when(this.getProductData()).then(function (res) {
                _d.productData = res.eventData;
                PVC.initVueBefore()
            }).fail(function (err) {
                _d.$el.hide();
                _c.error("getProductData fail");
                console.log(err)
            }).done(function () { })
        },
        replaceSchema(scheme, data) {
            for (let i in data) {
                scheme = scheme.replace("#{" + i + "}", data[i])
            }
            return scheme
        },
        animationMoveTo(pos = 0) {
            $("html, body").stop().animate({
                scrollTop: pos
            }, 300)
        },
        animationMoveX(target, pos = 0) {
            $(target).stop().animate({
                scrollLeft: pos
            }, 50)
        },
        getProductData() {
            var _d = PVC.data;
            var deferred = new $.Deferred;
            $.ajax({
                type: "GET",
                url: `${_d.serverURL[_d.env]}/event/${_d.eventNo}/productData.json`,
                dataType: "json",
                success: function (res) {
                    deferred.resolve(res)
                },
                error: function (err) {
                    deferred.reject(err)
                }
            });
            return deferred.promise()
        },
        initVueBefore() {
            var _data = this.data.productData;
            _data = _data.sort(function (a, b) {
                return a.divCode < b.divCode ? -1 : 1
            });
            _data.forEach(function (o, idx) {
                o.activeSecIdx = 0;
                o.section = o.section.sort(function (a, b) {
                    return a.seq < b.seq ? -1 : 1
                })
            });
            this.loadVue()
        },
        loadVue() {
            this.data.vue = new Vue({
                el: PVC.data.el,
                mounted() {
                    this.$nextTick(function () {
                        if (PVC.data.callbackByVueMounted) {
                            PVC.data.callbackByVueMounted()
                        }
                    })
                }
            })
        }
    };
    window.$pv = window.productVueCustom = window.PVC = PVC;
    $(window).ready(function () {
        PVC.default.currentDate = moment().format("YYYY-MM-DD HH:mm");
        PVC.default.checkIn = moment().format("YYYY-MM-DD");
        PVC.default.checkOut = moment().add(1, "days").format("YYYY-MM-DD");
        if (window.$ec) {
            PVC.default = Object.assign(PVC.default, {
                eventNo: EC.eventNo
            })
        }
        PVC.options = PVC.options || {};
        PVC.default = PVC.default || {};
        PVC.data = Object.assign(PVC.data, PVC.default, PVC.options);
        PVC.init()
    })
}(jQuery);
